/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs2235;

import edu.isu.cs2235.structures.Trie;

import java.io.*;
import java.net.URL;
import java.util.Scanner;

// Holy frick
// I'm starting this at 6:59PM on the day it's due. I have 4 hours. Heaven help me.
public class Driver {
    public Trie dict = new Trie();

    public static void main(String[] args) {

        Driver driver = new Driver();

        System.out.println("Loading dictionary...");
        try {
            driver.loadDictFromResources("en-US.dic");
        } catch (IOException e) {
            e.printStackTrace();
        }
        System.out.println("Dictionary loaded! Frick yes, baby!\n");

        System.out.println("Enter a string to spellcheck (-1 to quit): ");

        Scanner scanner = new Scanner(System.in);
        String stringToCheck;
        while((stringToCheck = scanner.nextLine()) != "-1") {
            driver.doCheck(stringToCheck);
            System.out.println("Enter a string to spellcheck (-1 to quit): ");
        }

        System.out.println("\n\nGood bye.");
    }

    private void doCheck(String stringToCheck) {
        System.out.println("Checking spelling...\n");

        String[] words = stringToCheck.split("\\s+");
        for(int i = 0; i < words.length; i++) {
            if(!dict.contains(words[i].replaceAll("[^\\w]", ""))) {
                System.out.print("Misspelling found: \"" + words[i].replaceAll("[^\\w]", "") + "\" in ... ");
                if (i > 0)
                    System.out.print(words[i - 1] + " ");
                System.out.print(words[i] + " ");
                if (i < words.length - 1)
                    System.out.print(words[i + 1] + " ");
                System.out.println("...");

                System.out.println("Replace with:");
                System.out.print("1. Manual Entry\n2. Skip\nChoice: ");
                Scanner scanner = new Scanner(System.in);
                if(scanner.nextInt() == 1) {
                    System.out.println("\nManual replacement for \"" + words[i] + "\": ");
                    String replacement = scanner.nextLine();

                    System.out.println("Replaced \"" + words[i] + "\" with \"" + replacement + "\"");
                    words[i] = replacement;
                }
            }
        }
        System.out.print("Spelling check complete:\n\nResults: ");
        for(String word : words) {
            System.out.print(" " + word);
        }
        System.out.println("\n");
    }

    public void loadDictFromResources(String resourceName) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("/home/xeyler/Downloads/en-US.dic")));

        String line;
        while((line = reader.readLine()) != null) {
            // Okay, so the supplied dictionary contains a lot of strange characters. Periods, single-quotes, accented characters... etc.
            // For the sake of simplicity, I'm ignoring all lines that have characters that aren't within the 26 letters of the alphabet.
            // Perhaps a real implementation would require something else, and it wouldn't be impossible, but it would make it that much
            // more complicated, so I hope this design decision is agreeable.
            if(line.matches("^[a-zA-Z]*$"))
                dict.addWord(line);
        }

        reader.close();
    }
}
